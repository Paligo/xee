---
source: xee-qt/src/load.rs
expression: "load_from_xml(&mut xot, ROOT_FIXTURE).unwrap()"
---
[
    TestCase {
        name: "fn-root-1",
        description: " Evaluation of the fn:root function with no arguments and no context node set. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-2",
        description: " Evaluation of the fn:root function with no arguments that uses context node, which is not a node. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-2a",
        description: " Expression with fn:root function that may be pre-evaluated. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-2b",
        description: " Expression with fn:root function that may be pre-evaluated. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-3",
        description: " Evaluation of the fn:root function with argument set to the empty sequence. Use count to avoid empty file. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-4",
        description: " Evaluation of the fn:root function with argument set to a comment node (via a variable). ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-5",
        description: " Evaluation of the fn:root function with argument set to a comment node set directly on argument. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-6",
        description: " Evaluation of the fn:root function with argument set to an elemnt node set via a variable. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-7",
        description: " Evaluation of the fn:root function with argument set to an direct element node by setting directly on argument. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-8",
        description: " Evaluation of the fn:root function with argument set to an processing instruction node by setting via a variable. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-9",
        description: " Evaluation of the fn:root function with argument set to an direct element node by setting directly on argument. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-10",
        description: " Evaluation of the fn:root function with argument set to an computed element with attribute node by setting via a variable. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-11",
        description: " Evaluation of the fn:root function with argument set to an computed element with attribute node by setting directly on argument. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-12",
        description: " Evaluation of the fn:root function with argument set to a document node by setting via a variable. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-13",
        description: " Evaluation of the fn:root function with argument set to an computed document node by setting directly on argument. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-14",
        description: " Evaluation of the fn:root function with argument set to a element node by quering an xml file. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-15",
        description: " Evaluation of the fn:root function with argument set to a attribute node by quering an xml file. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-16",
        description: " Evaluation of the fn:root function with argument set to computed text node by setting directly on argument. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-17",
        description: " Evaluation of the fn:root function with argument set to computed text node by setting argument vias a variable. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-18",
        description: " Evaluation of the fn:root function used in conjunction with \"is\" operator (returns true). ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-19",
        description: " Evaluation of the fn:root function used in conjunction with \"is\" operator (returns false). ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-20",
        description: " Evaluation of the fn:root function used as argument to namespace-uri function (use an element). \n        Use fn:count to avoid empty file ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-21",
        description: " Evaluation of the fn:root function used as argument to namespace-uri function (use a comment). \n        Use fn:count to avoid empty file ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-22",
        description: " Evaluation of the fn:root function used as argument to namespace-uri function (use a Processing Instruction). \n        Use fn:count to avoid empty file ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-23",
        description: " Evaluation of the fn:root function used as argument to namespace-uri function (use a text node). use fn:count to avoid empty file ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "fn-root-24",
        description: " Evaluation of the fn:root function with argument set to \".\" and no context node set. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "K-NodeRootFunc-1",
        description: " A test whose essence is: `Root(2)`. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "K-NodeRootFunc-2",
        description: " A test whose essence is: `(1, 2, 3)[root()]`. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "K-NodeRootFunc-3",
        description: " A test whose essence is: `root(2)`. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "K-NodeRootFunc-4",
        description: " A test whose essence is: `empty(root(()))`. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "K2-NodeRootFunc-1",
        description: " Apply fn:root() to a directly constructed element. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "K2-NodeRootFunc-2",
        description: " Apply fn:root() to an empty sequence coming from a parent axis. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "K2-NodeRootFunc-3",
        description: " Invoke on a comment node. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "K2-NodeRootFunc-4",
        description: " Invoke on an attribute node. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "K2-NodeRootFunc-5",
        description: " Invoke on a processing instruction node. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "K2-NodeRootFunc-6",
        description: " Invoke on a processing instruction node. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "K2-NodeRootFunc-7",
        description: " Invoke on a processing instruction node. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
    TestCase {
        name: "K2-NodeRootFunc-8",
        description: " Invoke on a single document node. ",
        created: Attribution {
            by: "",
            on: "",
        },
        modified: [],
        environments: [],
        dependencies: [],
        modules: [],
        test: "",
        result: AssertTrue,
    },
]
