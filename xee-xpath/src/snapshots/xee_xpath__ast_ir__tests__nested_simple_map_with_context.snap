---
source: xee-xpath/src/ast_ir.rs
expression: "convert_expr_single(\"(1, 2) ! (. + 1) ! (. + 2)\")"
---
Let(
    Let {
        name: Name(
            "v2",
        ),
        var_expr: Binary(
            Binary {
                left: Const(
                    Integer(
                        1,
                    ),
                ),
                op: Comma,
                right: Const(
                    Integer(
                        2,
                    ),
                ),
            },
        ),
        return_expr: Let(
            Let {
                name: Name(
                    "v8",
                ),
                var_expr: Map(
                    Map {
                        context_names: ContextNames {
                            item: Name(
                                "v3",
                            ),
                            position: Some(
                                Name(
                                    "v4",
                                ),
                            ),
                            last: Some(
                                Name(
                                    "v5",
                                ),
                            ),
                        },
                        var_atom: Variable(
                            Name(
                                "v2",
                            ),
                        ),
                        return_expr: Binary(
                            Binary {
                                left: Variable(
                                    Name(
                                        "v3",
                                    ),
                                ),
                                op: Add,
                                right: Const(
                                    Integer(
                                        1,
                                    ),
                                ),
                            },
                        ),
                    },
                ),
                return_expr: Map(
                    Map {
                        context_names: ContextNames {
                            item: Name(
                                "v9",
                            ),
                            position: Some(
                                Name(
                                    "v10",
                                ),
                            ),
                            last: Some(
                                Name(
                                    "v11",
                                ),
                            ),
                        },
                        var_atom: Variable(
                            Name(
                                "v8",
                            ),
                        ),
                        return_expr: Binary(
                            Binary {
                                left: Variable(
                                    Name(
                                        "v9",
                                    ),
                                ),
                                op: Add,
                                right: Const(
                                    Integer(
                                        2,
                                    ),
                                ),
                            },
                        ),
                    },
                ),
            },
        ),
    },
)
