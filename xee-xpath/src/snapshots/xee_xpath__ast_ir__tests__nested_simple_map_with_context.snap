---
source: xee-xpath/src/ast_ir.rs
expression: "convert_expr_single(\"(1, 2) ! (. + 1) ! (. + 2)\")"
---
Let(
    Let {
        name: Name(
            "v2",
        ),
        var_expr: Binary(
            Binary {
                left: (
                    Const(
                        Integer(
                            1,
                        ),
                    ),
                    1..2,
                ),
                op: Comma,
                right: (
                    Const(
                        Integer(
                            2,
                        ),
                    ),
                    4..5,
                ),
            },
        ),
        return_expr: Let(
            Let {
                name: Name(
                    "v8",
                ),
                var_expr: Map(
                    Map {
                        context_names: ContextNames {
                            item: Name(
                                "v3",
                            ),
                            position: Name(
                                "v4",
                            ),
                            last: Name(
                                "v5",
                            ),
                        },
                        var_atom: (
                            Variable(
                                Name(
                                    "v2",
                                ),
                            ),
                            4..5,
                        ),
                        return_expr: Binary(
                            Binary {
                                left: (
                                    Variable(
                                        Name(
                                            "v3",
                                        ),
                                    ),
                                    0..0,
                                ),
                                op: Add,
                                right: (
                                    Const(
                                        Integer(
                                            1,
                                        ),
                                    ),
                                    14..15,
                                ),
                            },
                        ),
                    },
                ),
                return_expr: Map(
                    Map {
                        context_names: ContextNames {
                            item: Name(
                                "v9",
                            ),
                            position: Name(
                                "v10",
                            ),
                            last: Name(
                                "v11",
                            ),
                        },
                        var_atom: (
                            Variable(
                                Name(
                                    "v8",
                                ),
                            ),
                            0..26,
                        ),
                        return_expr: Binary(
                            Binary {
                                left: (
                                    Variable(
                                        Name(
                                            "v9",
                                        ),
                                    ),
                                    0..0,
                                ),
                                op: Add,
                                right: (
                                    Const(
                                        Integer(
                                            2,
                                        ),
                                    ),
                                    24..25,
                                ),
                            },
                        ),
                    },
                ),
            },
        ),
    },
)
