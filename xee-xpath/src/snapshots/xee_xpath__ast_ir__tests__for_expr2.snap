---
source: xee-xpath/src/ast_ir.rs
expression: "convert_expr_single(\"for $x in (1, 2) return $x + 1\")"
---
Ok(
    Let(
        Let {
            name: Name(
                "v3",
            ),
            var_expr: Binary(
                Binary {
                    left: (
                        Const(
                            Integer(
                                1,
                            ),
                        ),
                        SourceSpan {
                            offset: SourceOffset(
                                11,
                            ),
                            length: SourceOffset(
                                1,
                            ),
                        },
                    ),
                    op: Comma,
                    right: (
                        Const(
                            Integer(
                                2,
                            ),
                        ),
                        SourceSpan {
                            offset: SourceOffset(
                                14,
                            ),
                            length: SourceOffset(
                                1,
                            ),
                        },
                    ),
                },
            ),
            return_expr: Map(
                Map {
                    context_names: ContextNames {
                        item: Name(
                            "v0",
                        ),
                        position: Name(
                            "v4",
                        ),
                        last: Name(
                            "v5",
                        ),
                    },
                    var_atom: (
                        Variable(
                            Name(
                                "v3",
                            ),
                        ),
                        SourceSpan {
                            offset: SourceOffset(
                                14,
                            ),
                            length: SourceOffset(
                                1,
                            ),
                        },
                    ),
                    return_expr: Binary(
                        Binary {
                            left: (
                                Variable(
                                    Name(
                                        "v0",
                                    ),
                                ),
                                SourceSpan {
                                    offset: SourceOffset(
                                        24,
                                    ),
                                    length: SourceOffset(
                                        2,
                                    ),
                                },
                            ),
                            op: Add,
                            right: (
                                Const(
                                    Integer(
                                        1,
                                    ),
                                ),
                                SourceSpan {
                                    offset: SourceOffset(
                                        29,
                                    ),
                                    length: SourceOffset(
                                        1,
                                    ),
                                },
                            ),
                        },
                    ),
                },
            ),
        },
    ),
)
